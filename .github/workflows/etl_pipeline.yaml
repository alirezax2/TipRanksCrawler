name: TipRanks_ETL_Pipeline

on:
  schedule:
    - cron: '0 0 * * *'  # Every night at midnight UTC
  push:
    branches:
      - main
  workflow_dispatch:  # Manual trigger (hook)
  repository_dispatch:
    types: [webhook-event]  

jobs:
  etl-part1:
    name: Pipeline ETL Part1
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - uses: actions/checkout@v4

      # Step 2: Install uv (dependency manager)
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      # Step 3: Set up Python environment
      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"     

      # Step 4: Install the project dependencies
      - name: Install the project
        run: uv sync --all-extras --dev

      # Step 5: Run the ETL Part1 script
      - name: Pipeline ETL Part1
        env:
          HF_TOKEN_TIPRANKS: ${{ secrets.HF_TOKEN_TIPRANKS }}
          DATASET_NAME_TIPRANKS_OUTPUT: ${{ secrets.DATASET_NAME_TIPRANKS_OUTPUT }}
          dataset_name_TradingView_input: ${{ secrets.dataset_name_TradingView_input }}
        run: uv run python main.py part1

      # Step 6: Get current timestamp
      - name: Get current timestamp
        run: echo "TIMESTAMP=$(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV

      # Step 7: Commit and push the generated CSV file if there are changes
      - name: Commit files
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add tipranks/*
          git commit -m "Add CSV files - $TIMESTAMP"
          git push 

  etl-part2:
    name: Pipeline ETL Part2
    runs-on: ubuntu-latest
    needs: etl-part1
    steps:
      # Step 1: Check out the repository
      - uses: actions/checkout@v4

      # Step 2: Install uv (dependency manager)
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      # Step 3: Set up Python environment
      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"     

      # Step 4: Install the project dependencies
      - name: Install the project
        run: uv sync --all-extras --dev

      # Step 5: Run the ETL Part2 script
      - name: Run Pipeline ETL Part2
        env:
          HF_TOKEN_TIPRANKS: ${{ secrets.HF_TOKEN_TIPRANKS }}
          DATASET_NAME_TIPRANKS_OUTPUT: ${{ secrets.DATASET_NAME_TIPRANKS_OUTPUT }}
          dataset_name_TradingView_input: ${{ secrets.dataset_name_TradingView_input }}
        run: uv run python main.py part2

      # Step 6: Get current timestamp
      - name: Get current timestamp
        run: echo "TIMESTAMP=$(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV

      # Step 7: Commit and push the generated CSV file if there are changes
      - name: Commit files
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git pull origin main --rebase
          git add tipranks/*
          git commit -m "Add CSV files - $TIMESTAMP"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  etl-merge:
    name: Pipeline ETL merge
    runs-on: ubuntu-latest
    needs: [etl-part1, etl-part2]
    timeout-minutes: 360  # Set timeout to 6 hours

    steps:
      # Step 1: Check out the repository
      - uses: actions/checkout@v4

      # Step 2: Install uv (dependency manager)
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Pull latest changes
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git pull origin main --rebase


      # Step 3: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      # Step 4: Install the project dependencies
      - name: Install the project
        run: uv sync --all-extras --dev

      # Step 5: Run the merge script
      - name: Run Merge
        env:
          HF_TOKEN_TIPRANKS: ${{ secrets.HF_TOKEN_TIPRANKS }}
          DATASET_NAME_TIPRANKS_OUTPUT: ${{ secrets.DATASET_NAME_TIPRANKS_OUTPUT }}
          dataset_name_TradingView_input: ${{ secrets.dataset_name_TradingView_input }}
        run: uv run python merge.py

      # Step 6: Get current timestamp
      - name: Get current timestamp
        run: echo "TIMESTAMP=$(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV

      # Step 7: Commit and push the generated CSV file if there are changes
      - name: Commit files
        run: |
          git add tipranks/*
          git commit -m "Add CSV files - $TIMESTAMP"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
